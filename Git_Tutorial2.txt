存檔-> add-> commit-> push 上去    一定要先add 再commit！！
若有衝突-> 先pull 下來-> 再push 上去

git push
git push <repository> <refspec>
為了將本地端數據庫的修改歷史共享到遠程數據庫
必須上​​傳本地端數據庫中儲存的修改歷史。
refspec:指定要push的分支
(例 git push -u Orgin master)(Orgin是自創的遠端數據庫別名)

git clone
git clone <repository> <directory>
執行複製後，可以把遠端數據庫裡的內容全部下載下來
修改歷史也會被複製到本地數據庫裡，如此，可以查看歷史記錄和提交
repository:指定遠端數據庫的URL
directory:指定要複製的目錄名稱
(例 git clone git@github.com:kexuan5458/Git_Tutorial_0821.git kitty


git pull
執行pull之後，會從遠端數據庫下載最新的修改歷史

git remote add <name> <url> 
name:可以為遠端數據庫取個適合的別名或暱稱，這樣以後push的時候就不需要每次輸入網址
(例 git remote add origin https://github.com/kexuan5458/Git_Tutorial_0821
在主控台，執行push或pull命令時想省略遠端數據庫名稱的話，會使用origin名稱作為遠端數據庫。
因此一般都會為遠端數據庫命名為origin。

git checkout -b <branch>
(例 git checkout -b issue1)
可建立issue1的分支，並且切換過去issue1
(例 git checkout issue1)
單純建立分支
